//有bug 空格
//读入一些整数，逆序输出到一行中
//在读完所有整数之前，没有其他事情可做，只能把每个数都存下来
//存在数组中
#include<stdio.h>
#define maxn 105
int a[maxn];
int main()
 {
 int x,n = 0;
 while(scanf("%d",&x)==1)
    a[n++] = x;
 for(int i = n-1;i >=1;i--)
    printf("%d",a[i]);
    printf("%d\n",a[0]);
    return 0;
 }

//int a[maxn]声明了一个包含maxn个整型变量的数组，即a[0],a[1],a[2],...,a[maxn-1]
//但不包含a[maxn] maxn必须是常数，不能是变量
//声明maxn 为105而不是100 更保险
//在算法竞赛中，常常难以精确地计算出需要的数组大小，数组一般会声明地稍微大一些
//a[n++] = x:先赋值a[n] = x,然后执行n=n+1,可改写为{a[n]=x;n=n+1;}
//此处花括号不能省略，默认情况下，for循环只有一条循环语句，只有使用花括号时，花括号里面
//才会整体作为循环体
//n++和++n都会给n加1，但当他们在一个表达式中时，n++使用加一前的值计算表达式，++n使用加一
//后的值计算表达式
//一般要求输出的行首行尾均无空格，相邻的两个数据间用单个空格隔开，所以一共要输出n个整数，
//但只有n-1个空格，所以只好分两条语句输出
//只有将数组的定义在main函数外时才可以开得很大，放在main函数内，数组稍微大程序就会异常退出
//比较大的数组应该尽量声明在main函数外，否则程序可能无法运行
//C语言数组不能进行赋值操作，若果声明的是int s[maxn],b[maxn],不能赋值b=a
//如果要从数组a复制k个元素到数组b，可以memcpy(b,a,sizeof(int)*k)
//如果数组a和b都是浮点型的，复制时要写成memcpy(b,asizeof(double)*k),且使用memcpy函数要包含
//头文件string.h
//如果把数组a全部复制到数组b中：memcpy(b,a,sizeof(a))

